{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","className","children","classes","ExpensesFilter","onFilterChange","value","onChange","e","target","ExpenseDate","date","month","toLocaleDateString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","el","id","ChartBar","label","maxValue","barFill","Math","round","style","height","Chart","dataPoints","dataPointValues","d","max","dataPoint","ExpensesChart","expenses","chartDataPoints","expense","expenseMonth","getMonth","console","log","Expenses","useState","filteredYear","setFilteredYear","filter","toString","enteredFilterData","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","expenseData","Date","onSubmit","preventDefault","htmlFor","type","prevState","min","step","onClick","NewExpense","onAddExpense","showNewExpense","setShowNewExpense","enteredExpenseData","random","DUMMY_EXPENSES","App","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ed25678.chunk.js","sourcesContent":["import \"./Card.css\";\nconst Card = ({ className, children }) => {\n  const classes = \"card \" + className;\n  return <div className={classes}>{children}</div>;\n};\n\nexport default Card;\n","\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = ({ onFilterChange,value}) => {\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select\n          value={value}\n          onChange={(e) => onFilterChange(e.target.value)}\n        >\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\nconst ExpenseDate = ({ date }) => {\n  const month = date.toLocaleDateString(\"en-US\", { month: \"long\" });\n  const day = date.toLocaleDateString(\"en-US\", { day: \"2-digit\" });\n  const year = date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = ({ title, amount, date }) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={date} />\n      <div>\n        <h2 className=\"expense-item__description\">{title}</h2>\n        <div className=\"expense-item__price\">${amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = ({ filteredExpenses }) => {\n  if (filteredExpenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {filteredExpenses.map((el) => (\n        <ExpenseItem\n          title={el.title}\n          amount={el.amount}\n          date={el.date}\n          key={el.id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\nconst ChartBar = ({ label, maxValue, value }) => {\n  let barFill = \"0%\";\n  if (maxValue > 0) {\n    barFill = Math.round((value / maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: barFill }}></div>\n      </div>\n      <div className=\"chart-bar__label\">{label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar.js\";\nconst Chart = ({ dataPoints }) => {\n  const dataPointValues = dataPoints.map((d) => d.value);\n  const max = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={max}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = ({ expenses }) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n    console.log(chartDataPoints[expenseMonth].value)\n  }\n\n  return <Chart dataPoints={chartDataPoints}/>;\n};\n\nexport default ExpensesChart;\n","import \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nconst Expenses = ({ expenses }) => {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const saveFilterChange = (enteredFilterData) => {\n    setFilteredYear(enteredFilterData);\n  };\n  const filteredExpenses = expenses.filter(\n    (e) => e.date.getFullYear().toString() === filteredYear\n  );\n\n  return (\n    <li>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          onFilterChange={saveFilterChange}\n          value={filteredYear}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList filteredExpenses={filteredExpenses} />\n      </Card>\n    </li>\n  );\n};\n\nexport default Expenses;\n","import { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nconst ExpenseForm = ({ onSaveExpenseData, onCancel }) => {\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\",\n  });\n  const submitHandler = (e) => {\n    e.preventDefault();\n    onSaveExpenseData(expenseData);\n    onCancel();\n    setUserInput({\n      enteredTitle: \"\",\n      enteredAmount: \"\",\n      enteredDate: \"\",\n    });\n  };\n  const expenseData = {\n    title: userInput.enteredTitle,\n    amount: +userInput.enteredAmount,\n    date: new Date(userInput.enteredDate),\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Title</label>\n          <input\n            value={userInput.enteredTitle}\n            type=\"text\"\n            onChange={(e) =>\n              setUserInput((prevState) => ({\n                ...prevState,\n                enteredTitle: e.target.value,\n              }))\n            }\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Amount</label>\n          <input\n            value={userInput.enteredAmount}\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={(e) =>\n              setUserInput((prevState) => ({\n                ...prevState,\n                enteredAmount: e.target.value,\n              }))\n            }\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Date</label>\n          <input\n            value={userInput.enteredDate}\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={(e) =>\n              setUserInput((prevState) => ({\n                ...prevState,\n                enteredDate: e.target.value,\n              }))\n            }\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"submit\">Add Expense</button>\n          <button onClick={() => onCancel()}>Cancel</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useState } from \"react\";\nconst NewExpense = ({ onAddExpense }) => {\n  const [showNewExpense, setShowNewExpense] = useState(false);\n  const onCancel = () => {\n    setShowNewExpense(false);\n  };\n\n  const SaveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    onAddExpense(expenseData);\n  };\n  return (\n    <div className=\"new-expense\">\n      {showNewExpense ? (\n        <ExpenseForm\n          onSaveExpenseData={SaveExpenseDataHandler}\n          onCancel={onCancel}\n        />\n      ) : (\n        <button onClick={() => setShowNewExpense(true)}>Add New Expense</button>\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const AddExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={AddExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}